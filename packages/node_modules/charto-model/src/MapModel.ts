// This file is part of charto-model, copyright (c) 2017 BusFaster Ltd.
// Released under the MIT license, see LICENSE.

import { IObservableArray } from 'mobx';
import { types as T, IModelType, ISimpleType, ISnapshottable } from 'mobx-state-tree';
import { mst, shim, action, ModelInterface } from 'classy-mst';

import { PointModel, PointModelCode } from './PointModel';
import { Layer, LayerCode, ObservableLayerArray } from './Layer';

export const MapModelData = T.model({
	layers: T.optional(Layer, {}),
	center: T.optional(PointModel, {}),
	sw: T.optional(PointModel, {}),
	ne: T.optional(PointModel, {}),
	zoom: 1
});

export class MapModelCode extends shim(MapModelData) {

	@action
	setCenter(x: number, y: number) {
		this.center.x = x;
		this.center.y = y;
	}

	@action
	setBounds(s: number, w: number, n: number, e: number) {
		this.sw.x = s;
		this.sw.y = w;
		this.ne.x = n;
		this.ne.y = e;
	}

	@action
	setZoom(zoom: number) {
		this.zoom = zoom;
	}

}

export const MapModel = mst(MapModelCode, MapModelData);
export type MapModel = typeof MapModel.Type;
