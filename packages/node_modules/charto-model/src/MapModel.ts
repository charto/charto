// This file is part of charto-model, copyright (c) 2017 BusFaster Ltd.
// Released under the MIT license, see LICENSE.

import { IObservableArray } from 'mobx';
import { types as T, applySnapshot, IModelType, ISimpleType, ISnapshottable } from 'mobx-state-tree';
import { mst, shim, action, ModelInterface } from 'classy-mst';

import { PointModel, PointModelCode } from './PointModel';
import { Layer, LayerCode, ObservableLayerArray } from './Layer';

export const FeatureCountModel = T.model({
	region: '',
	count: 0
});

export const ShopLayerData = Layer.props({
	counts: T.optional(T.array(FeatureCountModel), []),
	price: -1
});

export class ShopLayerCode extends shim(ShopLayerData, Layer) {

	@action
	setPrice(price: number) { this.price = price; }

}

export const ShopLayer = mst(ShopLayerCode, ShopLayerData);

export const MapModelData = T.model({
	layers: T.optional(T.array(ShopLayer), []),
	center: T.optional(PointModel, {}),
	sw: T.optional(PointModel, {}),
	ne: T.optional(PointModel, {}),
	zoom: 1
});

export class MapModelCode extends shim(MapModelData) {

	@action
	setCenter(x: number, y: number) {
		this.center.x = x;
		this.center.y = y;

		applySnapshot(this.layers, [
			{
				name: 'akaava:Kaava',
				counts: [
					{ name: '2017-091', count: ~~(Math.random() * 100) },
					{ name: '2017-564', count: ~~(Math.random() * 100) }
				],
				visible: true,
				price: 0.1
			}, {
				name: 'kanta:Kivi',
				counts: [
					{ name: '2017-091', count: ~~(Math.random() * 1000) },
					{ name: '2017-564', count: ~~(Math.random() * 1000) }
				],
				visible: false,
				price: 0.01
			}
		]);
	}

	@action
	setBounds(s: number, w: number, n: number, e: number) {
		this.sw.x = s;
		this.sw.y = w;
		this.ne.x = n;
		this.ne.y = e;
	}

	@action
	setZoom(zoom: number) {
		this.zoom = zoom;
	}

	@action
	setCenterZoom(x: number, y: number, zoom: number) {
		this.center.x = x;
		this.center.y = y;
		this.zoom = zoom;
	}

}

export const MapModel = mst(MapModelCode, MapModelData);
export type MapModel = typeof MapModel.Type;
