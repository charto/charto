import { GeoTree, GeoTreeOptions } from './GeoTree';
import { TileClass } from './QuadTile';
import { CacheTile } from './CacheTile';

export interface CacheTreeOptions<Tile> extends GeoTreeOptions {
	fetch: (tile: Tile) => Promise<string>;
}

export class CacheTree<Tile extends CacheTile = CacheTile> extends GeoTree<Tile> {

	constructor(
		options: CacheTreeOptions<Tile>,
		Tile = CacheTile as TileClass<Tile>
	) {
		const { fetch } = options;

		super(options, Tile);

		this.fetch = fetch;
	}

	public fetch: (tile: Tile) => Promise<string>;

}
