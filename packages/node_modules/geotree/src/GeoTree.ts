import { QuadTree } from './QuadTree';
import { TileClass } from './QuadTile';
import { GeoTile, NearestState } from './GeoTile';

export class GeoTree<Tile extends GeoTile = GeoTile> extends QuadTree<Tile> {

	constructor(
		s: number,
		w: number,
		n: number,
		e: number,
		Tile = GeoTile as TileClass<Tile>
	) {
		super(s, w, n, e, Tile);
	}

	/** @param x Northing. */
	/** @param y Easting. */

	findNearest(x: number, y: number, s = this.s, w = this.w, n = this.n, e = this.e, root?: Tile) {
		const state: NearestState = { x, y, s, w, n, e, result: null, dist: Infinity };

		const result = this.iterate(
			(tile: Tile) => tile.findNearest(state),
			null,
			s, w, n, e,
			root
		).then(() => state.result);

		return(result);
	}

}
