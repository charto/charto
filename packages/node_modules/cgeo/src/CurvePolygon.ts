// This file is part of cgeo, copyright (c) 2017 BusFaster Ltd.
// Released under the MIT license, see LICENSE.

import { Geometry, GeometryKind, registerType } from './Geometry';
import { GeometryCollection } from './GeometryCollection';
import { Curve, CurveSpec } from './Curve';
import { Surface } from './Surface';
import { MultiCurveSpec, initCurves } from './MultiCurve';

// GeometryCollection compatibility allows calling methods from MultiCurve.
export class CurvePolygon extends Surface implements GeometryCollection<Curve | null | undefined> {

	constructor(ringList: CurveSpec | (CurveSpec | MultiCurveSpec | Curve | null | undefined)[] = []) {
		super();

		if(this.initProto) this.initProto();

		initCurves(this, ringList, true);
	}

	initProto() {
		CurvePolygon.prototype.clone = GeometryCollection.prototype.clone;
		CurvePolygon.prototype.transform = GeometryCollection.prototype.transform;
		CurvePolygon.prototype.hasZ = GeometryCollection.prototype.hasZ;
		CurvePolygon.prototype.hasM = GeometryCollection.prototype.hasM;
		(CurvePolygon as any).initProto = null;
	}

	addChild(child: Curve) { this.childList.push(child); }

	childList: ( Curve | null | undefined )[] = [];

}

registerType(CurvePolygon, GeometryKind.curvePolygon, 2);
