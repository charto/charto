// This file is part of cgeo, copyright (c) 2017 BusFaster Ltd.
// Released under the MIT license, see LICENSE.

import { Geometry, GeometryKind, registerType } from './Geometry';
import { GeometryCollection } from './GeometryCollection';
import { MultiSurface } from './MultiSurface';
import { Polygon, PolygonSpec } from './Polygon';

export interface MultiPolygonSpec extends Array<Polygon | PolygonSpec> {}

export function initPolygons(
        target: MultiPolygon,
        specList: MultiPolygonSpec
) {
	for(let spec of specList) {
		if(spec instanceof Polygon) {
			target.addChild(spec);
		} else {
			target.addChild(new Polygon(spec));
		}
	}
}

export class MultiPolygon extends MultiSurface<Polygon> {

	constructor(childList: MultiPolygonSpec = []) {
		super();

		initPolygons(this, childList);
	}

}

registerType(MultiPolygon, GeometryKind.multiPolygon, 2);
