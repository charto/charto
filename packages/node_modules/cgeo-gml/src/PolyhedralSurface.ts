// This file is part of cgeo-gml, copyright (c) 2017 BusFaster Ltd.
// Released under the MIT license, see LICENSE.

import * as cxml from 'cxml';
import * as cgeo from 'cgeo';
import { WriteState } from './Geometry';
import { GeometryCollection } from './GeometryCollection';
import { Parser } from './Parser';

@cgeo.mixin()
export class PolyhedralSurface extends cgeo.PolyhedralSurface {

	writeGML(state: WriteState) {
		return(GeometryCollection.prototype.writeGML.call(this, state, state.gml.PolygonPatch));
	}

	static initGML(parser: Parser<any>) {
		GeometryCollection.initGML(parser);
	}

	static finishGML(parser: Parser<any>, token: cxml.ElementToken): GeometryCollection | null {
		const childList = parser.childList;
		if(!childList) return(null);

		parser.childList = parser.childListStack.pop();

		let num = childList.length;

		while(num--) {
			const child = childList[num];

			if(child && child.kind != cgeo.GeometryKind.polygon) break;
		}

		// If edges are curved, use MultiSurface instead.
		// Unfortunately there's no compound surface similar to CompoundCurve.

		if(num < 0) {
			return(new cgeo.PolyhedralSurface(childList as cgeo.Polygon[]));
		} else {
			return(new cgeo.MultiSurface(childList as cgeo.Surface[]));
		}
	}

}
